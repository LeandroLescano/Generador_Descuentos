{"ast":null,"code":"'use strict';\n\nvar immediate = require('immediate');\n/* istanbul ignore next */\n\n\nfunction INTERNAL() {}\n\nvar handlers = {};\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED || typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n\n  var promise = new this.constructor(INTERNAL);\n\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\n\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\n\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\n\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\n\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\n\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n\n  return self;\n};\n\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n\n  function onError(value) {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n\n  return out;\n}\n\nPromise.resolve = resolve;\n\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\n\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\n\nfunction all(iterable) {\n  var self = this;\n\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n\n  return promise;\n\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\n\nfunction race(iterable) {\n  var self = this;\n\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n\n  return promise;\n\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/Tateh/Desktop/ReactJs/generador-descuentos/node_modules/lie/lib/browser.js"],"names":["immediate","require","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","module","exports","Promise","resolver","TypeError","state","queue","outcome","safelyResolveThenable","prototype","onRejected","then","onFulfilled","promise","constructor","unwrap","push","QueueItem","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","value","resolve","reject","func","returnValue","e","self","result","tryCatch","getThen","status","thenable","i","len","length","error","obj","appyThen","apply","arguments","called","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","Object","toString","call","values","Array","resolved","allResolver","resolveFromAll","outValue","race","response"],"mappings":"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","sourcesContent":["'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}